steps:
  - label: "check ci image rebuild"
    plugins:
      - chronotc/monorepo-diff#v2.3.0:
          diff: "git diff --name-only origin/main"
          watch:
            - path: "ci/build-ci-image.sh"
              config:
                command: "ci/build-ci-image.sh"
                label: "ci build images"
  - wait

  - label: "build"
    command: "ci/scripts/build.sh -p ci-dev"
    key: "build"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 15

  - label: "build other components"
    command: "ci/scripts/build-other.sh"
    key: "build-other"
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN: github-token
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
          environment:
            - GITHUB_TOKEN
    timeout_in_minutes: 10

  - label: "build (deterministic simulation)"
    command: "ci/scripts/build-simulation.sh"
    key: "build-simulation"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 15

  - label: "docslt"
    command: "ci/scripts/docslt.sh"
    key: "docslt"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 10

  - label: "end-to-end test"
    command: "ci/scripts/e2e-test.sh -p ci-dev"
    depends_on:
      - "build"
      - "docslt"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 15

  - label: "end-to-end test (parallel)"
    command: "ci/scripts/e2e-test-parallel.sh -p ci-dev"
    depends_on:
      - "build"
      - "docslt"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 12

  - label: "end-to-end test for opendal (parallel)"
    command: "ci/scripts/e2e-test-parallel-for-opendal.sh -p ci-dev"
    depends_on:
      - "build"
      - "docslt"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 12

  - label: "end-to-end test (parallel, in-memory)"
    command: "ci/scripts/e2e-test-parallel-in-memory.sh -p ci-dev"
    depends_on: "build"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 12

  - label: "end-to-end source test"
    command: "ci/scripts/e2e-source-test.sh -p ci-dev"
    depends_on:
      - "build"
      - "build-other"
    plugins:
      - docker-compose#v4.9.0:
          run: source-test-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 18

  - label: "end-to-end sink test"
    command: "ci/scripts/e2e-sink-test.sh -p ci-dev"
    depends_on:
      - "build"
      - "build-other"
    plugins:
      - docker-compose#v4.9.0:
          run: sink-test-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 18
    cancel_on_build_failing: true

  - label: "end-to-end iceberg sink test"
    command: "ci/scripts/e2e-iceberg-sink-test.sh -p ci-dev"
    depends_on:
      - "build"
      - "build-other"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 5

  - label: "e2e java-binding test"
    command: "ci/scripts/java-binding-test.sh -p ci-dev"
    depends_on: "build"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 7

  - label: "regress test"
    command: "ci/scripts/regress-test.sh -p ci-dev"
    depends_on: "build"
    plugins:
      - docker-compose#v4.9.0:
          run: regress-test-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 5

  - label: "unit test"
    command: "ci/scripts/pr-unit-test.sh"
    plugins:
      - ./ci/plugins/swapfile
      - seek-oss/aws-sm#v2.3.1:
          env:
            CODECOV_TOKEN: my-codecov-token
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          environment:
            - CODECOV_TOKEN
    timeout_in_minutes: 13

  - label: "fuzz test"
    command: "ci/scripts/pr-fuzz-test.sh -p ci-dev"
    depends_on:
      - "build"
      - "build-simulation"
    plugins:
      - ./ci/plugins/swapfile
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 25

  - label: "check"
    command: "ci/scripts/check.sh"
    plugins:
      - gencer/cache#v2.4.10:
          id: cache
          key: "v1-cache-{{ id }}-{{ runner.os }}-{{ checksum 'Cargo.lock' }}"
          restore-keys:
            - "v1-cache-{{ id }}-{{ runner.os }}-"
            - "v1-cache-{{ id }}-"
          backend: s3
          s3:
            bucket: ci-cache-bucket
            args: "--no-progress"
          paths:
            - ".cargo/advisory-db"
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
    timeout_in_minutes: 20

  - label: "unit test (deterministic simulation)"
    command: "ci/scripts/deterministic-unit-test.sh"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 10
    cancel_on_build_failing: true

  - label: "scaling test (deterministic simulation)"
    command: "TEST_NUM=5 ci/scripts/deterministic-it-test.sh scale::"
    depends_on: "build-simulation"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 10

  - label: "recovery integration test (deterministic simulation)"
    command: "TEST_NUM=5 ci/scripts/deterministic-it-test.sh recovery::"
    depends_on: "build-simulation"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 10

  - label: "end-to-end test (deterministic simulation)"
    command: "TEST_NUM=16 ci/scripts/deterministic-e2e-test.sh"
    depends_on: "build-simulation"
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN: github-token
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
          environment:
            - GITHUB_TOKEN
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 21
    cancel_on_build_failing: true

  - label: "recovery test (deterministic simulation)"
    command: "TEST_NUM=8 KILL_RATE=0.5 ci/scripts/deterministic-recovery-test.sh"
    depends_on: "build-simulation"
    plugins:
      # - seek-oss/aws-sm#v2.3.1:
      #     env:
      #       BUILDKITE_ANALYTICS_TOKEN: buildkite-build-analytics-deterministic-token
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
      # - test-collector#v1.0.0:
      #     files: "*-junit.xml"
      #     format: "junit"
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 25
    cancel_on_build_failing: true

  - label: "misc check"
    command: "ci/scripts/misc-check.sh"
    plugins:
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
      - shellcheck#v1.2.0:
          files: ./**/*.sh
    timeout_in_minutes: 5

  # Generates cpu flamegraph env
  - label: "flamegraph-env-build"
    key: "flamegraph-env-build"
    command: "ci/scripts/flamegraph-env-build.sh"
    if: build.pull_request.labels includes "cpu_flamegraph" || build.pull_request.labels includes "heap_flamegraph"
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN: github-token
      - docker-compose#v4.9.0:
          run: rw-build-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
          environment:
            - GITHUB_TOKEN
    timeout_in_minutes: 20

  # Generates cpu flamegraph if label `cpu_flamegraph` is added to PR.
  - label: "Generate CPU flamegraph"
    command: "PULL_REQUEST=$BUILDKITE_PULL_REQUEST ci/scripts/gen-flamegraph.sh cpu"
    depends_on: "flamegraph-env-build"

    if: build.pull_request.labels includes "cpu_flamegraph"

    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN: github-token
      - docker-compose#v4.9.0:
          run: ci-flamegraph-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
          environment:
            - GITHUB_TOKEN
    # TODO(kwannoel): Here are the areas that can be further optimized:
    # - Nexmark event generation: ~3min for 100mil records.
    # - Generate Flamegraph: ~15min (see https://github.com/koute/not-perf/issues/30 on optimizing)
    # - Building RW artifacts: ~8min
    timeout_in_minutes: 90 # ~3-4 queries can run

  # Generates heap flamegraph if label `heap_flamegraph` is added to PR.
  - label: "Generate Heap flamegraph"
    command: "PULL_REQUEST=$BUILDKITE_PULL_REQUEST ci/scripts/gen-flamegraph.sh heap"
    depends_on: "flamegraph-env-build"

    if: build.pull_request.labels includes "heap_flamegraph"

    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN: github-token
      - docker-compose#v4.9.0:
          run: ci-flamegraph-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
          environment:
            - GITHUB_TOKEN
    # TODO(kwannoel): Here are the areas that can be further optimized:
    # - Nexmark event generation: ~3min for 100mil records.
    # - Generate Flamegraph: ~15min (see https://github.com/koute/not-perf/issues/30 on optimizing)
    # - Building RW artifacts: ~8min
    timeout_in_minutes: 60 # ~3-4 queries can run

  # Backwards compatibility tests
  - label: "Backwards compatibility tests"
    command: "RW_COMMIT=$BUILDKITE_COMMIT ci/scripts/backwards-compat-test.sh -p ci-dev"
    if: |
      build.pull_request.labels includes "breaking-change" ||
        build.pull_request.labels includes "ci/run-backwards-compat-tests"
    depends_on:
      - "build"
    plugins:
      - docker-compose#v4.9.0:
          run: ci-flamegraph-env
          config: ci/docker-compose.yml
          mount-buildkite-agent: true
    timeout_in_minutes: 20
